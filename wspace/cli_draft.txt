interpret/compile/opt:
    -h, --help
    -f, --format
        Override guessed syntax format
            ws
            wsa
            wsx
    -H, --haskell-compat
        equivalent to
            --eof=error
            --error-style=haskell
            --lazy-parse
            --div=floor
    --eof=<eof>
        where <eof> is a number or "error"
    --error-style=<error>
        options:
            default
            dump
            haskell
            none (useful for code golf)
    --lazy-parse
    --div=<mode>
        mode:
            floor
            trunc
            euclid
            round (maybe)
            ceil (probably not)
    --no-big
        Use 64-bit integers instead of arbitrary-precision
    --negative-heap
        Equivalent to --heap-min=-inf
    --heap-min=<min>
        Default 0
    --heap-max=<max>
        Default inf
    --stack-cap=<cap>
        Default inf
    --call-stack-cap=<cap>
        Default inf
    --char=<encoding>
        byte, ASCII
        UTF-8
        UTF-16
    --checked-heap
    --no-implicit-exit
    -Os
        Optimize for Whitespace program byte size
            Avoid duplicating functions while inlining
            Deduplicate identical regions
            Minify labels
            For example:
            - `add ^1 ^1` -> `add ^ ^2`
            - `mul ^1 ^1` -> `mul ^ ^2`
            - `sub ^1 ^1 jz lbl` -> `sub ^ ^2 jz lbl`
            - `slide 1 drop` -> `drop drop`
            - `slide 2 drop` -> `drop drop drop`
            - `drop drop drop drop` -> `slide 3 drop`
            - `drop drop drop drop drop` -> `slide 4 drop`
            - `mul ^2 ^2 add ^4 ^2 add` -> `add ^3 ^2 mul ^3 ^2 add`
            - `mul ^2 ^1 add ^4 ^3 add` -> `add ^3 ^1 mul ^3 ^3 add`
            - `a: ... jmp c b: ... jmp a` -> `b: ... a: ... jmp c`
            - Function drops args at end, but those args are copied to
              be used again afterwards => remove drops and copies:
                ```
                call 0 3 3 print_matrix
                call 0 3 3 transpose
                call 0 3 3 print_matrix
                ```
            - switches that drop value:
                ```
                    sub ^ 2 jz .x
                    sub ^ 8 jz .y
                    sub ^ 16 jz .z
                    drop ret
                .x: .y: .z: drop ret
                ```
                to
                ```
                    sub 2 jz ^ .x
                    sub 6 jz ^ .y
                    sub 8 jz ^ .z
                    drop ret
                .x: .y: .z: drop ret
                ```
              for example:
                ```
                .print_base_prefix:
                    sub ^ 2 jz .print_base_2_prefix
                    sub ^ 8 jz .print_base_8_prefix
                    sub ^ 16 jz .print_base_16_prefix
                    drop
                    ret
                .print_base_2_prefix:
                    jmp 'b' .print_base_prefix_ret
                .print_base_8_prefix:
                    jmp 'o' .print_base_prefix_ret
                .print_base_16_prefix:
                    push 'x' # fallthrough
                .print_base_prefix_ret:
                    printc '0' printc
                    drop
                    ret
                ```
            - Factor out shared instructions
                ```
                a: drop push 'a' jmp d
                b: drop push 'b' jmp d
                c: drop push 'c' jmp d
                d: printc
                ```
                to (save 6 bytes)
                ```
                a: push 'a' jmp d
                b: push 'b' jmp d
                c: push 'c' jmp d
                d: printc drop
                ```

                ```
                a: drop push 'a' jmp d
                b: drop push 'b' jmp d
                c: drop push 'c' jmp d
                d: add printc
                ```
                to (save 3 bytes)
                ```
                a: push 'a' jmp d
                b: push 'b' jmp d
                c: push 'c' jmp d
                d: slide 1 add printc
                ```
            - Swap params
                ```
                a: jmp ^ ^2 .c
                b: jmp ^1 ^3 .c
                c: swap
                ```
                to
                ```
                a: jmp ^1 ^1 .c
                b: jmp ^2 ^2 .c
                c:
                ```
    --optimize-count
        Optimize for Whitespace program instruction count
            - `swap drop` -> `slide 1`
            - `drop drop drop` -> `slide 2 drop`
    -O0
        Disable optimizations
    -g, --debug
        equivalent to:
            --with-assertions
            --minify-labels=false
            --coalesce-asserts=false
    --with-assertions
        Enable assertions for wsa precondition comments
    --minify-labels
        Enable label minification
    --coalesce-asserts
        Coalesce asserts. This results in less precise error location
        reporting
    --spec=<version>
        0.2 (disable or replace 0.3 features, if possible)
        0.3
        Extensions?
            debug_printstack
            debug_printheap
            trace
            shuffle
    --remove-dead
        Perform dead code elimination
        - Remove dead branches in switches that will never be taken,
          i.e. if printf is never called with the %#nb verb, that case
          can be removed


interpret:
    -i <file>, --in=<file>
    -o <file>, --out<file>

fmt:
    $0 fmt ws [--STL] [-f <format> | --format=<format>] <program>
    $0 fmt wsx [-f <format> | --format=<format>] <program>
    $0 fmt wsa [-f <format> | --format=<format>] <program>

[--]
<program>
